name: Build Test & Publish nuget package

on:
  push:
    branches: [ main ]
    paths:
    - 'src/Swashbuckle.AspNetCore.ExtensionProperties/**'
    
  pull_request:
    types: [opened, synchronize, reopened ]
    branches: [ main ]
    paths:
    - 'src/**'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: src/
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Set up Code Climate
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./codeclimate-test-reporter
        chmod +x ./codeclimate-test-reporter
        ./codeclimate-test-reporter before-build
    - name: Get Version
      run: echo "FULLVERSION=$(git describe --abbrev=0 --tags).$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c release -p:Version=${{ env.FULLVERSION }}
    - name: Test
      run: dotnet test --no-build --verbosity normal -c release /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=coverage /p:Exclude=[xunit.*]* &&
           mkdir coverage && 
           mv Swashbuckle.AspNetCore.ExtensionProperties.Tests/coverage.info coverage/lcov.info
    - name: Publish Code Coverage
      run: ./codeclimate-test-reporter after-build -t lcov -r ${{ secrets.CODECLIMATE_TEST_REPORTER_ID }} -p ./ --exit-code $? --prefix /src
    - name: Publish to Nuget
      if: github.event_name == 'push' || github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch'
      run: dotnet nuget push Swashbuckle.AspNetCore.ExtensionProperties/bin/Release/Swashbuckle.AspNetCore.ExtensionProperties.${{ env.FULLVERSION }}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json